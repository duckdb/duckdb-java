name: Vendor
on:
  workflow_call:
    inputs:
      duckdb-sha:
        description: 'Vendor Specific DuckDB SHA'
        required: false
        default: ''
        type: 'string'
  workflow_dispatch:
    inputs:
      duckdb-sha:
        description: 'Vendor Specific DuckDB SHA'
        required: false
        default: ''
        type: 'string'

jobs:
  vendor:
    runs-on: ubuntu-latest
    outputs:
      did_vendor: ${{ steps.vendor.outputs.vendor }}

    name: "Update Vendored Sources"
    if: github.repository == 'duckdb/duckdb-java'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - uses: actions/checkout@v4
        with:
          repository: duckdb/duckdb
          path: .git/duckdb
          fetch-depth: 0

      - name: Get commit SHA
        if: ${{ inputs.duckdb-sha != '' }}
        run: |
          cd .git/duckdb && git checkout ${{ inputs.duckdb-sha }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Vendor sources
        id: vendor
        run: |
          export REV=$(cd .git/duckdb && git rev-parse --short HEAD && cd ../..)
          echo "Updating vendored DuckDB sources to $REV"
          git config --global user.email "github_bot@duckdblabs.com"
          git config --global user.name "DuckDB Labs GitHub Bot"
          git rm -rf src/duckdb
          python vendor.py --duckdb .git/duckdb
          git add src/duckdb CMakeLists.txt
          rm -rf .git/duckdb
          git commit -m "Update vendored DuckDB sources to $REV"
          git push --dry-run
          # Check if ahead of upstream branch
          # If yes, set a step output
          if [ $(git rev-list HEAD...origin/main --count) -gt 0 ]; then
            # Avoid set-output, it's deprecated
            echo "vendor=ok" >> "$GITHUB_OUTPUT"
          fi

      - if: steps.vendor.outputs.vendor != '' && github.event_name != 'pull_request'
        run: |
          git push -u origin HEAD
