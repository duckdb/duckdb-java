name: Java JDBC
on:
  push:
  pull_request:
  workflow_call:
  workflow_dispatch:
  repository_dispatch:

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  OVERRIDE_GIT_DESCRIBE: ${{ inputs.override_git_describe }}

jobs:
 
  java-combine:
    if: ${{ inputs.override_git_describe == '' }}
    name: Java Combine
    runs-on: ubuntu-latest


    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.git_ref }}

      - shell: bash
        run: mkdir jdbc-artifacts

      - name: Get dummy JAR
        shell: bash
        run: |
          wget --quiet https://artifacts.duckdb.org/duckdb-java/main/java-jars.zip
          unzip -d jdbc-artifacts java-jars.zip
          ls -R  jdbc-artifacts

      - name: Combine JARs
        shell: bash
        run: |
          mkdir -p ~/.gnupg
          touch passphrase
          echo -e "passphrase-file passphrase\npinentry-mode loopback\nno-tty\nbatch\n" > ~/.gnupg/gpg.conf
          #echo -e "allow-loopback-pinentry\n" > ~/.gnupg/gpg-agent.conf

          export XML='
            <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
              https://maven.apache.org/xsd/settings-1.0.0.xsd">
              <servers>
                <server>
                  <id>ossrh</id>
                  <username>hfmuehleisen</username> <!-- Sonatype OSSRH JIRA user/pw -->
                  <password>PASSWORD</password>
                </server>
              </servers>
            </settings> '
            mkdir ~/.m2
            echo $XML > ~/.m2/settings.xml
            echo "${{ secrets.MAVEN_PGP_PK }}" | base64 -d > maven_pgp_key
            gpg --batch --import maven_pgp_key
            python scripts/jdbc_maven_deploy.py ${{ github.ref_name }} jdbc-artifacts .
          ls -lahR jdbc-artifacts
