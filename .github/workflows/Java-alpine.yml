name: DuckDB-JDBC Alpine Compilation testing

on:
  workflow_dispatch:  
  push:
    branches: [ main ]
  pull_request:

jobs:
  java-alpine-amd64:
    name: Java Linux (Alpine arm64)
    runs-on: ubuntu-latest
      
    env:
      GEN: ninja
      DUCKDB_PLATFORM: linux_arm64_musl
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create temporary Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          FROM arm64v8/alpine:latest

          RUN apk update
          RUN apk add --no-cache build-base gcc g++ libstdc++ cmake make ninja git pkgconfig boost-dev openjdk17 openjdk17-jdk
          
          RUN rm -rf /var/cache/apk/*
          ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk
          ENV PATH=$JAVA_HOME/bin:${PATH}

          WORKDIR /duckdb-java
          CMD ["make", "release"]

          EOF
        
      - name: Build and run Alpine Container for building
        shell: sh

        run: |
          docker build --platform linux/arm64  -t alpine-arm64 .
          docker run --platform linux/arm64 -v `pwd`:/duckdb-java --name alpine-arm64 alpine-arm64


      - name: Package JDBC Artifact
        run: |
          # Copy or rename the JDBC jar as needed
          cp build/release/duckdb_jdbc.jar duckdb_jdbc-linux-arm64-musl.jar

      - uses: actions/upload-artifact@v4
        with:
          name: java-linux-arm64-musl
          path: build/release/duckdb_jdbc.jar